using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemyController : MonoBehaviour
{
    public float moveSpeed;

    private Rigidbody2D myRigidbody2D;

    private bool moving;
    public float timeBetweenMove;
    private float timeBetweenMoveCounter;
    public float timeToMove;
    private float timeToMoveCounter;
	public float movingDistance;
	float startPositionX;
	public Vector3 moveDirection;

	public float waitToReload;
	private bool reloading;
	private GameObject thePlayer;

    void Start()
    {
        myRigidbody2D = GetComponent<Rigidbody2D>();
		startPositionX = myRigidbody2D.position.x;

		timeBetweenMoveCounter = Random.Range (timeBetweenMove * 0.75f, timeBetweenMove * 1.25f);
		timeToMoveCounter = Random.Range (timeToMove * 0.75f, timeBetweenMove * 1.25f);

    }

    void Update()
	{
		if (myRigidbody2D.position.x < startPositionX - movingDistance || myRigidbody2D.position.x > startPositionX + movingDistance)
		{
			moveSpeed = -moveSpeed;
		}

		if (moving)
        {
			timeToMoveCounter -= Time.deltaTime;
			myRigidbody2D.velocity = moveDirection;

			if (timeToMoveCounter < 0f)
            {
				moving = false;
				timeBetweenMoveCounter = Random.Range (timeBetweenMove * 0.75f, timeBetweenMove * 1.25f);
			}

		}
        else
        {
			timeBetweenMoveCounter -= Time.deltaTime;
			myRigidbody2D.velocity = Vector2.zero;

			if (timeBetweenMoveCounter < 0f)
            {
				moving = true;
				timeToMoveCounter = Random.Range (timeToMove * 0.75f, timeBetweenMove * 1.25f);

				moveDirection = new Vector3 (Random.Range (-1f, 1f) * moveSpeed, Random.Range (-1f, 1f) * moveSpeed, 0f);
			}
		}

		if (reloading)
		{
			waitToReload -= Time.deltaTime;
			if (waitToReload < 0)
			{
				Application.LoadLevel(Application.loadedLevel);
				thePlayer.SetActive(true);
			}
		}
	}
}
